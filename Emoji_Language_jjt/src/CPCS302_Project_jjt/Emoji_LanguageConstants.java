/* Generated By:JJTree&JavaCC: Do not edit this line. Emoji_LanguageConstants.java */
package CPCS302_Project_jjt;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface Emoji_LanguageConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PLUS = 5;
  /** RegularExpression Id. */
  int MINUS = 6;
  /** RegularExpression Id. */
  int MULTIPLY = 7;
  /** RegularExpression Id. */
  int DIVIDE = 8;
  /** RegularExpression Id. */
  int REMAINDER = 9;
  /** RegularExpression Id. */
  int POWER = 10;
  /** RegularExpression Id. */
  int ASSIGNMENT = 11;
  /** RegularExpression Id. */
  int IS_EQUAL = 12;
  /** RegularExpression Id. */
  int NOT_EQUAL = 13;
  /** RegularExpression Id. */
  int GREATER_THAN = 14;
  /** RegularExpression Id. */
  int GREATER_THAN_OR_EQUAL = 15;
  /** RegularExpression Id. */
  int LESS_THAN = 16;
  /** RegularExpression Id. */
  int LESS_THAN_OR_EQUAL = 17;
  /** RegularExpression Id. */
  int AND = 18;
  /** RegularExpression Id. */
  int OR = 19;
  /** RegularExpression Id. */
  int NOT = 20;
  /** RegularExpression Id. */
  int OPEN_ROUND_BRACKET = 21;
  /** RegularExpression Id. */
  int CLOSE_ROUND_BRACKET = 22;
  /** RegularExpression Id. */
  int OPEN_SQUARE_BRACKET = 23;
  /** RegularExpression Id. */
  int CLOSE_SQUARE_BRACKET = 24;
  /** RegularExpression Id. */
  int OPEN_ANGLE_BRACKET = 25;
  /** RegularExpression Id. */
  int CLOSE_ANGLE_BRACKET = 26;
  /** RegularExpression Id. */
  int END_STATEMENT = 27;
  /** RegularExpression Id. */
  int BAR = 28;
  /** RegularExpression Id. */
  int LETTER = 29;
  /** RegularExpression Id. */
  int SYMBOL = 30;
  /** RegularExpression Id. */
  int ID = 31;
  /** RegularExpression Id. */
  int IN = 32;
  /** RegularExpression Id. */
  int FL = 33;
  /** RegularExpression Id. */
  int BO = 34;
  /** RegularExpression Id. */
  int CONSTANT = 35;
  /** RegularExpression Id. */
  int INCASE = 36;
  /** RegularExpression Id. */
  int SO = 37;
  /** RegularExpression Id. */
  int ELSE = 38;
  /** RegularExpression Id. */
  int END = 39;
  /** RegularExpression Id. */
  int REPEAT = 40;
  /** RegularExpression Id. */
  int ARR = 41;
  /** RegularExpression Id. */
  int LIST = 42;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 43;
  /** RegularExpression Id. */
  int MULTI_LINES_COMMENT = 44;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\":)\"",
    "\":(\"",
    "\"*_*\"",
    "\":/\"",
    "\":|\"",
    "\"^_^\"",
    "\"^=^\"",
    "\";)\"",
    "\";(\"",
    "\":>\"",
    "\":>=\"",
    "\":<\"",
    "\":<=\"",
    "\"&_&\"",
    "\"o_o\"",
    "\"x_x\"",
    "\"(-\"",
    "\"-)\"",
    "\"[\"",
    "\"]\"",
    "\"<\"",
    "\">\"",
    "\"@\"",
    "\"->\"",
    "<LETTER>",
    "<SYMBOL>",
    "<ID>",
    "<IN>",
    "<FL>",
    "<BO>",
    "\"CONS\"",
    "\"INCASE\"",
    "\"SO\"",
    "\"ELSE\"",
    "\"END\"",
    "\"REPEAT\"",
    "\"Arr\"",
    "\"List\"",
    "<SINGLE_LINE_COMMENT>",
    "<MULTI_LINES_COMMENT>",
  };

}
